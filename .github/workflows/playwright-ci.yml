name: Test Execution - Playwright
run-name: ${{github.event_name == 'schedule' && 'staging'  || inputs.env}} - playwright test execution

on:
  schedule:
    - cron: "15 16 * * 1-5"

  workflow_dispatch:
    inputs:
      env:
        description: Select Test Environment
        type: choice
        default: staging
        options:
          - staging
          - prod

      cli_args:
        description: Additional CLI Arguments (--project "Google Chrome" / -g "Search User")
        type: string
        required: false

      publish_report:
        description: Publish Test Report
        type: boolean
        default: true

permissions:
  id-token: write
  contents: read
  pages: write

env:
  TESTENV: ${{github.event_name == 'schedule' && 'staging'  || inputs.env}}
  DOCKER_COMPOSE_FILE: rolevault-webapp/docker-compose.${{github.event_name == 'schedule' && 'staging'  || inputs.env}}.yml
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  ROLE_VAULT_ENCRYPTION_KEY: ${{ secrets.ROLE_VAULT_ENCRYPTION_KEY }}
  PUBLISH_REPORT: ${{ github.event_name == 'schedule' && 'true' || inputs.publish_report }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout Test Repo
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Checkout RoleVault Webapp Repo
        uses: actions/checkout@v4
        with:
          repository: NayeemJohnY/rolevault-webapp
          path: rolevault-webapp

      - name: Start RoleVault Webapp (Docker Compose Up)
        run: docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d

      - name: Wait for RoleVault to start
        run: |
          for i in {1..60}; do
            if docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs | grep -q "RoleVault started successfully"; then
              echo "<========================= ✅ RoleVault App started successfully! ✅ =========================>"
              exit 0
            fi
            echo "Waiting.... attempt $i/60"
            sleep 5
          done
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs --tail 100
          echo "<========================= ❌ Timeout: RoleVault did not start within 5 minutes ❌ =========================>"
          exit 1

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: PreTest - ESLint & TS Compile
        run: npm run pretest
      - name: Run Playwright tests
        run: npx playwright test ${{ inputs.cli_args }}

      - name: Stop RoleVault Webapp (Docker Compose Down)
        if: always()
        run: |
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs > application-logs.log
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} down

      - name: Generate Allure Report
        if: success() || failure()
        uses: NayeemJohnY/actions/allure-report-with-history@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allure-results-dir: ./allure-results
          allure-report-dir: ./allure-report

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-results
          if-no-files-found: ignore
          retention-days: 30
          path: |
            playwright-report
            allure-report
            screenshots
            test-results
            application-logs.log
            network-reports

      - name: Prepare GitHub Pages Content
        if: ${{ (success() || failure()) && env.PUBLISH_REPORT == 'true' }}
        uses: NayeemJohnY/actions/prepare-github-pages@main
        with:
          allure-report-dir: ./allure-report
          playwright-report-dir: ./playwright-report

      - name: Deploy GitHub Pages
        if: ${{ (success() || failure()) && env.PUBLISH_REPORT == 'true' }}
        uses: NayeemJohnY/actions/deploy-github-pages-site@main
